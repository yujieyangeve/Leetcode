package sort;

public class HeapSort {
    public static void main(String[] args) {
        int[]  arrs = new int[]{58,12,2,89,54,3,1,7,78};
        heapSort(arrs);
        for (int i = 0; i < arrs.length; i++) {
            System.out.println(arrs[i]);
        }
    }

    private static void heapSort(int[] arrs) {
        int length = arrs.length;
        for (int i = length / 2 - 1; i >= 0; i--) {
            maxHeapify(arrs, i, length);
        }

        for (int k = length - 1; k >= 0; k--) {
            swap(arrs, 0, k);
            maxHeapify(arrs, 0 ,k);
        }

    }

    private static void maxHeapify(int[] arrs, int i, int length) {
       int temp = arrs[i];
        for(int k=i*2+1;k<length;k=k*2+1){//从i结点的左子结点开始，也就是2i+1处开始
            if(k+1<length && arrs[k]<arrs[k+1]){//如果左子结点小于右子结点，k指向右子结点
                k++;
            }
            if(arrs[k] >temp){//如果子节点大于父节点，将子节点值赋给父节点（不用进行交换）
                arrs[i] = arrs[k];
                i = k;
            }else{
                break;
            }
        }
        arrs[i] = temp;//将temp值放到最终的位置
    }

    private static void swap(int[] arrs, int i, int j) {
        int temp = arrs[i];
        arrs[i] = arrs[j];
        arrs[j] = temp;
    }
}
