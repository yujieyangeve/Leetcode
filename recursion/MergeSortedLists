package recursion;

import org.omg.Messaging.SYNC_WITH_TRANSPORT;

public class MergeSortedLists {

    public static void main(String[] args) {

        ListNode n3 = new ListNode(4, null);
        ListNode n2 = new ListNode(2, n3);
        ListNode l1 = new ListNode(1, n2);

        ListNode l23 = new ListNode(4, null);
        ListNode l22 = new ListNode(3, l23);
        ListNode l2 = new ListNode(1, l22);
        ListNode merged = mergeTwoLists(l1, l2);

        while (merged != null){
            System.out.println(merged.val);
            merged = merged.next;
        }
    }

    public static class ListNode {
        int val;
        ListNode next;

        ListNode() {
        }

        ListNode(int val) {
            this.val = val;
        }

        ListNode(int val, ListNode next) {
            this.val = val;
            this.next = next;
        }
    }

    public static ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        //ListNode merged = new ListNode();
        if (l1 == null && l2 ==null) return null;
        else if(l1 == null && l2 != null) return l2;
        else if (l1 != null && l2 == null) return l2;
        else {
            ListNode tmp;
            if (l1.val < l2.val){
                tmp = l1;
                //l1.next = l2;
                tmp.next = mergeTwoLists(l1.next, l2);
            }
            else {
                tmp = l2;
                tmp.next = mergeTwoLists(l1, l2.next);
            }
            return tmp;
        }
    }
}
